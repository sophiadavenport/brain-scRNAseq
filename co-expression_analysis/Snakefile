use_conda=True

datasets={"SZ_celltypeclass": config["sz_adata_path"], "BD_celltypeclass": config["bd_adata_path"], "MS_celltypeclass": config["ms_adata_path"], "AD_celltypeclass": config["ad_adata_path"]}
celltypes = ['Oligodendrocytes', 'Microglia', 'Excitatory_neurons', 'OPCs_COPs', 'Astrocytes', 'Vascular_Cells', 'Inhibitory_neurons'] #list of all unique celltypes from all input datasets

rule all:
    input:
        expand("results/{dataset}__{celltype}_coexpr.csv", dataset=datasets.keys(), celltype=celltypes), expand("results/{dataset}__{celltype}/modules/modules.csv", dataset=datasets.keys(), celltype=celltypes), expand("results/{dataset}__{celltype}/{dataset}__{celltype}_individualmatrix.csv", dataset=datasets.keys(), celltype=celltypes)
        #expand("results/{dataset}__{celltype}/modules/gene_network.png", dataset=datasets.keys(), celltype=celltypes)

rule cscore:
    input:
        adata=lambda wildcards: datasets[wildcards.dataset]
    output:
        coexpr="results/{dataset}__{celltype}_coexpr.csv",pvals="results/{dataset}__{celltype}_pvals.csv",teststats="results/{dataset}__{celltype}_teststats.csv",genes="results/{dataset}__{celltype}_genes.csv"
    threads: 2
    params:
        celltype_col="Celltype_Class"
    conda:
        "envs/cscore_env.yaml"
    shell:
        """
        python cscore.py --adata {input.adata} --celltype_col {params.celltype_col} --current_celltype {wildcards.celltype} --output_prefix results/{wildcards.dataset}__{wildcards.celltype}
        """

rule wgcna_go:
    input:
        coexpr="results/{dataset}__{celltype}_coexpr.csv",pvals="results/{dataset}__{celltype}_pvals.csv",genes="results/{dataset}__{celltype}_genes.csv"
    output:
        modules="results/{dataset}__{celltype}/modules/modules.csv"
    conda:
        "envs/wgcnago_env.yaml"
    shell:
        """
        Rscript wgcna_go.R {input.coexpr} {input.pvals} {input.genes} results/{wildcards.dataset}__{wildcards.celltype}/modules
        """

rule individual_matrix_exp:
    input:
        adata=lambda wildcards: datasets[wildcards.dataset], modules="results/{dataset}__{celltype}/modules/modules.csv"
    output:
        matrix="results/{dataset}__{celltype}/{dataset}__{celltype}_individualmatrix.csv"
    threads: 4
    params:
        celltype_col="Celltype_Class"
    conda:
        "envs/cscore_env.yaml"
    shell:
        """
        python indv_module_matrix.py --adata {input.adata} --modules {input.modules} --matrix {output.matrix} --current_celltype {wildcards.celltype} --celltype_col {params.celltype_col}
        """


#rule plot_network:
##    input:
#        coexpr="results/{dataset}__{celltype}_coexpr.csv", modules="results/{dataset}__{celltype}/modules/modules.csv"
#    output:
#        plot="results/{dataset}__{celltype}/modules/gene_network.png"
 #   conda:
#        "envs/plot_network_env.yaml"
#    shell:
#        """
#        Rscript plot_gene_network.R {input.coexpr} {input.modules} {output.plot}
#        """