use_conda = True

datasets={"MS": config["ms_adata_path"}
celltypes = ['Astrocytes', 'Excitatory_neurons', 'OPCs_COPs', 'Endo_Peri', 'Inhibitory_neurons', 'Oligodendrocytes', 'T _cells', 'B_cells', 'Microglia'] #list of all unique celltypes from all input datasets

rule all:
    input:
        expand("results/{dataset}_{celltype}_edger_results.csv", dataset=datasets.keys(), celltype=celltypes), expand("reports/{dataset}_summary.txt", dataset=datasets.keys())

rule adata_to_mtx:
    input:
        adata=lambda wildcards: datasets[wildcards.dataset]
    output:
        mtx=temp("intermediate/{dataset}_{celltype}_counts.mtx"), barcodes=temp("intermediate/{dataset}_{celltype}_barcodes.tsv"), features=temp("intermediate/{dataset}_{celltype}_features.tsv"), metadata=temp("intermediate/{dataset}_{celltype}_metadata.csv")
    threads: 2
    params:
        split_col="Celltype"
    conda:
        "envs/scanpy.yaml"
    shell:
        """
        python adata_R_format.py --adata {input.adata} --dataset {wildcards.dataset} --celltype {wildcards.celltype} --split_col {params.split_col} --counts_path {output.mtx} --metadata_path {output.metadata} --barcodes_path {output.barcodes} --features_path {output.features}
        """

rule run_edger: #using percent mitochondrial genes and average features as covariates
    input:
        counts="intermediate/{dataset}_{celltype}_counts.mtx", metadata="intermediate/{dataset}_{celltype}_metadata.csv", barcodes="intermediate/{dataset}_{celltype}_barcodes.tsv", features="intermediate/{dataset}_{celltype}_features.tsv"
    output:
        "results/{dataset}_{celltype}_edger_results.csv"
    threads: 2
    params:
        condition="Condition"
    conda:
        "envs/edger.yaml"
    shell:
        """
        Rscript run_edgeR.R {input.counts} {input.barcodes} {input.features} {input.metadata} {params.condition} {output}
        """

rule summarize_DEG_results:
    input:
        lambda wildcards: expand("results/{dataset}_{celltype}_edger_results.csv",
                                 dataset=[wildcards.dataset],
                                 celltype=celltypes)
    output:
        report="reports/{dataset}_summary.txt",figures=directory("results/{dataset}_figures")
    conda:
        "envs/report.yaml"
    shell:
        """
        python summarize_results.py --input_files {input} --dataset {wildcards.dataset} --report {output.report} --figures_dir {output.figures}
        """